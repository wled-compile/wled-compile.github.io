{
    "sources" :
    [{
        "id": 0,
		"custom": 0,
        "name": "Original Aircoookie",
		"githubusername": "Aircoookie",
		"githubreponame": "WLED",
		"recommendedbranch":"main",
		"recommended_esp8266":"nodemcuv2",
		"recommended_esp32":"esp32dev"
	},
	 {
		"id": 1,
		"custom": 0,
        "name": "Sound Reactive",
		"githubusername": "atuline",
		"githubreponame": "WLED",
		"recommendedbranch":"dev",
		"recommended_esp8266":"",
		"recommended_esp32":"esp32_4MB_S"
     },
	 {
		"id": 2,
		"custom": 0,
        "name": "MoonModules Fork",
		"githubusername": "moonmodules",
		"githubreponame": "WLED",
		"recommendedbranch":"mdev",
		"recommended_esp8266":"nodemcuv2",
		"recommended_esp32":"esp32_4MB_S"
     },
	 {
		"id": 3,
		"custom": 1,
        "name": "Your own Fork/Repository",
		"githubusername": "",
		"githubreponame": "",
		"recommendedbranch":""
     }
	],
	"details" :[
		{
			"name" : "Redefine board type (List of boards <a target='_blank' href='https://docs.platformio.org/en/latest/boards/index.html#espressif-32'>here</a>)",
			"sources" : [0, 1, 2, 3],
			"type" : "defparam",
			"line" : "board = "
		},
		{
			"name" : "Redefine flash mode type",
			"sources" : [0, 1, 2, 3],
			"type" : "defparam",
			"value_list": {
				"dout": "Dual Output, 2 pins used for data, approx. 50% slower than qio",
				"dio": "Dual I/O, 2 pins used for address & data, approx. 45% slower than qio",
				"qout": "Quad Output, 4 pins used for data, approx. 15% slower than qio",
				"qio": "Quad I/O, 4 pins used for address & data, fastest"
				
			},
			"line" : "board_build.flash_mode = "
		},
		{
			"name" : "Redefine flash frequency",
			"sources" : [0, 1, 2, 3],
			"type" : "defparam",
			"value_list": {
				"40000000L": "40 MHz - typical value ",
				"20000000L": "20 MHz",
				"26000000L": "26 MHz",
				"80000000L": "80 MHz"
			},
			"line" : "board_build.f_flash = "
		},
		{
			"name" : "Redefine flash size",
			"sources" : [0, 1, 2, 3],
			"type" : "defparam",
			"value_list": {
				"1MB": "some very cheap ESP8266 boards",
				"2MB": "some cheap ESP8266 or ESP32-C3 boards",
				"4MB": "typical value",
				"8MB": "some ESP32(-xx) boards",
				"16MB": "some ESP32(-xx) boards"
			},
			"line" : "board_upload.flash_size = "
		},
		{
			"name" : "Redefine MCU type",
			"sources" : [0, 1, 2, 3],
			"type" : "defparam",
			"value_list": {
				"esp8266": "ESP8266",
				"esp32": "ESP32 - classic",
				"esp32c3": "ESP32-C3",
				"esp32s2": "ESP32-S2",
				"esp32s3": "ESP32-S3",
				"esp32c6": "ESP32-C6"
				
			},
			"line" : "board_build.mcu = "
		},
		{
			"name" : "Redefine CPU frequency",
			"sources" : [0, 1, 2, 3],
			"type" : "defparam",
			"value_list": {
				"80000000L": "80 MHz - typical value for ESP8266",
				"160000000L": "160 MHz - typical value for ESP32-C3 and -C6",
				"240000000L": "240 MHz - typical for ESP32, ESP32-S2, ESP32-S3",
				"40000000L": "40 MHz"
			},
			"line" : "board_build.f_cpu = "
		},
		{
			"name" : "Redefine PSRAM type",
			"sources" : [0, 1, 2, 3],
			"type" : "defparam",
			"value_list": {
				"qspi": "Quad SPI PSRAM (usually 2 and 4 MB)",
				"opi": "Octal SPI PSRAM"
			},
			"line" : "board_build.psram_type = "
		},
		{
			"name" : "Redefine memory type (Flash & PSRAM, must fit to flash mode and PSRAM type def.)",
			"sources" : [0, 1, 2, 3],
			"type" : "defparam",
			"value_list": {
				"dio_qspi": "Dual I/O flash, Quad SPI PSRAM",
				"dout_qspi": "Dual Output flash, Quad SPI PSRAM",
				"dio_opi": "Dual I/O flash, Octal SPI PSRAM",
				"qio_qspi": "Quad I/O flash, Quad SPI PSRAM",
				"qout_qspi": "Quad Output flash, Quad SPI PSRAM",
				"qio_opi": "Quad I/O flash, Octal SPI PSRAM",
				"opi_qspi": "Octal I/O flash, Quad SPI PSRAM",
				"opi_opi": "Octal I/O flash, Octal SPI PSRAM"
			},
			"line" : "board_build.arduino.memory_type = "
		}
		
	
	],
	"settings":[
		{
			"name" : "Include Debug flags",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "${common.debug_flags}",
			"lib_deps" : ""
		},
		{
			"name" : "Include sound reactive debug flags",
			"sources" : [1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D SR_DEBUG",
			"lib_deps" : ""
		},
		{
			"name" : "Enable microphone logger",
			"sources" : [1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D MIC_LOGGER",
			"lib_deps" : ""
		},
		{
			"name" : "Disable ESP-NOW Interface",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_DISABLE_ESPNOW",
			"lib_deps" : ""
		},
		{
			"name" : "Disable brownout detection",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_DISABLE_BROWNOUT_DET",
			"lib_deps" : ""
		},
		{
			"name" : "Disable OTA",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_DISABLE_OTA",
			"lib_deps" : ""
		},
		{
			"name" : "Enable WiFi fix for boards like Lolin C3 mini",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D LOLIN_WIFI_FIX",
			"lib_deps" : ""
		},
		{
			"name" : "Enable DMX support (hardware: MAX485 on TX Pin needed, ATTENTION: Does not compile/work togeter with AudioRective WLED, use AR disable option if required)",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_ENABLE_DMX",
			"lib_deps" : ""
		},
		{
			"name" : "Enable Ethernet support",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_USE_ETHERNET",
			"lib_deps" : ""
		},
		{
			"name" : "Enable adds the MAC address to the WLED AP SSID",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_AP_SSID_UNIQUE",
			"lib_deps" : ""
		},
		{
			"name" : "Enable debug messages to serial console (WLED_DEBUG)",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_DEBUG",
			"lib_deps" : ""
		},
		{
			"name" : "Define host for NET debug (for example an IP like 192.168.1.20, FQDN is also possible)",
			"sources" : [0, 1, 2, 3],
			"type" : "string",
			"minnumber": 0,
			"build_flags" : "-D WLED_DEBUG_HOST=",
			"lib_deps" : ""
		},
		{
			"name" : "Define port for NET debug (WLED_DEBUG_PORT, default: 7868)",
			"sources" : [0, 1, 2, 3],
			"type" : "number",
			"build_flags" : "-D WLED_DEBUG_PORT=",
			"lib_deps" : ""
		},
		{
			"name" : "Enable NTP debug",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_DEBUG_NTP",
			"lib_deps" : ""
		},
		{
			"name" : "Enable debug improv serial",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_DEBUG_IMPROV",
			"lib_deps" : ""
		},
		{
			"name" : "Enable simplified UI (User Interface)",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_ENABLE_SIMPLE_UI",
			"lib_deps" : ""
		},
		{
			"name" : "Enable MQTT",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_ENABLE_MQTT",
			"lib_deps" : ""
		},
		{
			"name" : "Disable MQTT",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_DISABLE_MQTT",
			"lib_deps" : ""
		},
		{
			"name" : "Enable Loxone support",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_ENABLE_LOXONE",
			"lib_deps" : ""
		},
		{
			"name" : "Disable Loxone support",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_DISABLE_LOXONE",
			"lib_deps" : ""
		},
		{
			"name" : "Enable websockets support",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_ENABLE_WEBSOCKETS",
			"lib_deps" : ""
		},
		{
			"name" : "Disable websockets support",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_DISABLE_WEBSOCKETS",
			"lib_deps" : ""
		},
		{
			"name" : "Enable Adalight support",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_ENABLE_ADALIGHT",
			"lib_deps" : ""
		},
		{
			"name" : "Enable Pixart",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_ENABLE_PIXART",
			"lib_deps" : ""
		},
		{
			"name" : "Disable Alexa support",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_DISABLE_ALEXA",
			"lib_deps" : ""
		},
		{
			"name" : "Disable Philips Hue support",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_DISABLE_HUESYNC",
			"lib_deps" : ""
		},
		{
			"name" : "Disable 2D features",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"build_flags" : "-D WLED_DISABLE_2D",
			"lib_deps" : ""
		},
		{
			"name" : "Set default LED pin GPIO number: ",
			"sources" : [0, 1, 2, 3],
			"type" : "number",
			"build_flags" : "-D LEDPIN=",
			"lib_deps" : ""
		},
		{
			"name" : "Set default button pin GPIO number: ",
			"sources" : [0, 1, 2, 3],
			"type" : "number",
			"build_flags" : "-D BTNPIN=",
			"lib_deps" : ""
		},
		{
			"name" : "Set default relay pin GPIO number: ",
			"sources" : [0, 1, 2, 3],
			"type" : "number",
			"build_flags" : "-D RLYPIN=",
			"lib_deps" : ""
		},
		{
			"name" : "Set default relay mode: 1=active high, 0=active low (default: 1)",
			"sources" : [0, 1, 2, 3],
			"type" : "number",
			"minnumber": 0,
			"build_flags" : "-D RLYMDE=",
			"lib_deps" : ""
		},
		{
			"name" : "Set default infrared pin GPIO number: ",
			"sources" : [0, 1, 2, 3],
			"type" : "number",
			"build_flags" : "-D IRPIN=",
			"lib_deps" : ""
		},	
		{
			"name" : "Set default audio pin GPIO number: ",
			"sources" : [1, 2, 3],
			"type" : "number",
			"build_flags" : "-D AUDIOPIN=",
			"lib_deps" : ""
		},
		{
			"name" : "Enable and define dig. mic. type by number: ",
			"sources" : [1, 2, 3],
			"type" : "number",
			"build_flags" : "-D DMENABLED=",
			"lib_deps" : ""
		},
		{
			"name" : "Define I2S SD pin number: ",
			"sources" : [1, 2, 3],
			"type" : "number",
			"build_flags" : "-D I2S_SDPIN=",
			"lib_deps" : ""
		},
		{
			"name" : "Define I2S WS pin number: ",
			"sources" : [1, 2, 3],
			"type" : "number",
			"build_flags" : "-D I2S_WSPIN=",
			"lib_deps" : ""
		},
		{
			"name" : "Define I2S SCK pin number: ",
			"sources" : [1, 2, 3],
			"type" : "number",
			"build_flags" : "-D I2S_CKPIN=",
			"lib_deps" : ""
		},
		{
			"name" : "Define max number of buttons (default: 2 for ESP8266, 4 for ESP32)",
			"sources" : [0, 1, 2, 3],
			"type" : "number",
			"build_flags" : "-D WLED_MAX_BUTTONS=",
			"lib_deps" : ""
		},
		{
			"name" : "Define max number of usermods (default: 4 for ESP8266, 6 for ESP32)",
			"sources" : [0, 1, 2, 3],
			"type" : "number",
			"build_flags" : "-D WLED_MAX_USERMODS=",
			"lib_deps" : ""
		},
		{
			"name" : "Define max number of LED busses (defaults: 4 on ESP8266 and on ESP32C3, 20 on ESP32, 6 on ESP32S3, 7 on ESP32S2)",
			"sources" : [0, 1, 2, 3],
			"type" : "number",
			"build_flags" : "-D WLED_MAX_BUSSES=",
			"lib_deps" : ""
		},
		{
			"name" : "Define default number of LEDs (default: 30)",
			"sources" : [0, 1, 2, 3],
			"type" : "number",
			"build_flags" : "-D DEFAULT_LED_COUNT=",
			"lib_deps" : ""
		},
		{
			"name" : "Define default value for automatic brightness limiter (ABL) in mA (default: 850, enter 0 to disable ABL, minimum: 250)",
			"sources" : [0, 1, 2, 3],
			"type" : "number",
			"minnumber": 0,
			"build_flags" : "-D ABL_MILLIAMPS_DEFAULT=",
			"lib_deps" : ""
		},
		{
			"name" : "Define default LED type (defalt: TYPE_WS2812_RGB, see wled00/const.h for possible values)",
			"sources" : [0, 1, 2, 3],
			"type" : "defparam",
			"minnumber": 0,
			"build_flags" : "-D DEFAULT_LED_TYPE=",
			"lib_deps" : ""
		},
		{
			"name" : "Define default LED color order (defalt: COL_ORDER_GRB, see wled00/const.h for possible values)",
			"sources" : [0, 1, 2, 3],
			"type" : "defparam",
			"minnumber": 0,
			"build_flags" : "-D DEFAULT_LED_COLOR_ORDER=",
			"lib_deps" : ""
		},
		{
			"name" : "Define number of LEDMAPs (default: 10 on ESP8266, 156 on ESP32)",
			"sources" : [0, 1, 2, 3],
			"type" : "number",
			"minnumber": 0,
			"build_flags" : "-D WLED_MAX_LEDMAPS=",
			"lib_deps" : ""
		},
		{
			"name" : "Define max number of LEDs (default: 1664 on ESP8266, 8192 on ESP32)",
			"sources" : [0, 1, 2, 3],
			"type" : "number",
			"minnumber": 0,
			"build_flags" : "-D MAX_LEDS=",
			"lib_deps" : ""
		},
		{
			"name" : "Define max number of LEDs per bus (default: 2048)",
			"sources" : [0, 1, 2, 3],
			"type" : "number",
			"minnumber": 0,
			"build_flags" : "-D MAX_LEDS_PER_BUS=",
			"lib_deps" : ""
		},
		{
			"name" : "Define max LEDs memory (default: 4000 on ESP8266, 32000 on ESP32C3 and ESP32S2, 64000 on ESP32 and ESP32S3)",
			"sources" : [0, 1, 2, 3],
			"type" : "number",
			"minnumber": 0,
			"build_flags" : "-D MAX_LED_MEMORY=",
			"lib_deps" : ""
		},
		{
			"name" : "Define WLED PWM frequency (default: 880 on ESP8266, 19531 on ESP32)",
			"sources" : [0, 1, 2, 3],
			"type" : "number",
			"minnumber": 0,
			"build_flags" : "-D WLED_PWM_FREQ=",
			"lib_deps" : ""
		},
		{
			"name" : "Define the default WiFi SSID",
			"sources" : [0, 1, 2, 3],
			"type" : "string",
			"minnumber": 0,
			"build_flags" : "-D CLIENT_SSID=",
			"lib_deps" : ""
		},
		{
			"name" : "Define the default WiFi password",
			"sources" : [0, 1, 2, 3],
			"type" : "string",
			"minnumber": 0,
			"build_flags" : "-D CLIENT_PASS=",
			"lib_deps" : ""
		},
		{
			"name" : "Define the name of the internal WiFI Access Point (default: WLED-AP)",
			"sources" : [0, 1, 2, 3],
			"type" : "string",
			"minnumber": 0,
			"build_flags" : "-D WLED_AP_SSID=",
			"lib_deps" : ""
		},
		{
			"name" : "Define the password for the internal WiFI Access Point (default: wled1234)",
			"sources" : [0, 1, 2, 3],
			"type" : "string",
			"minnumber": 0,
			"build_flags" : "-D WLED_AP_PASS=",
			"lib_deps" : ""
		},
		{
			"name" : "Define the whatchdog timout in milliseconds (default: 0 (deactivated))",
			"sources" : [0, 1, 2, 3],
			"type" : "number",
			"minnumber": 0,
			"build_flags" : "-D WLED_WATCHDOG_TIMEOUT=",
			"lib_deps" : ""
		}
	],
	"usermods":[
		{
			"name" : "Audio Reactive (for use with newest versions Aircoookie WLED)",
			"sources" : [0],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/audioreactive/readme.md",
			"build_flags" : "${esp32.AR_build_flags}",
			"lib_deps" : "${esp32.AR_lib_deps}"
		},
		{
			"name" : "Audio Reactive (for use with some older Aircoookie WLED (<0.14.1))",
			"sources" : [0],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/audioreactive/readme.md",
			"build_flags" : "-D USERMOD_AUDIOREACTIVE",
			"lib_deps" : "https://github.com/blazoncek/arduinoFFT.git"
		},
		{
			"name" : "DS18B20 Temperatursensor",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/Temperature/readme.md",
			"build_flags" : "-D USERMOD_DALLASTEMPERATURE",
			"lib_deps" : "paulstoffregen/OneWire @ ~2.3.8",
			"options" : [
				{
					"name" : "number of milliseconds between measurements, defaults to 60000 ms (60s)",
					"type" : "number",
					"minnumber": 1000,
					"build_flags" : "-D USERMOD_DALLASTEMPERATURE_MEASUREMENT_INTERVAL=",
					"lib_deps" : ""
				}
			]
		},
		{
			"name" : "DHT22 and DHT11 humidity and temperature sensors",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/DHT/readme.md",
			"build_flags" : "-D USERMOD_DHT",
			"lib_deps" : "https://github.com/alwynallan/DHT_nonblocking",
			"options" : [
				{
					"name" : "DHT model: 11, 21, 22 for DHT11, DHT21, or DHT22, defaults to 22/DHT22",
					"type" : "number",
					"minnumber": 11,
					"build_flags" : "-D USERMOD_DHT_DHTTYPE=",
					"lib_deps" : ""
				},
				{
					"name" : "Pin to which DHT is connected",
					"type" : "number",
					"minnumber":  0,
					"build_flags" : "-D USERMOD_DHT_PIN=",
					"lib_deps" : ""
				},
				{
					"name" : "Report temperatures in degrees Celsius, otherwise Fahrenheit will be reported",
					"type" : "checkbox",
					"build_flags" : "-D USERMOD_DHT_CELSIUS",
					"lib_deps" : ""
				},
				{
					"name" : "The number of milliseconds between measurements, defaults to 60000 ms",
					"type" : "number",
					"minnumber":  1000,
					"build_flags" : "-D USERMOD_DHT_MEASUREMENT_INTERVAL=",
					"lib_deps" : ""
				},
				{
					"name" : "The number of milliseconds after boot to take first measurement, defaults to 90000 ms",
					"type" : "number",
					"minnumber":  1000,
					"build_flags" : "-D USERMOD_DHT_FIRST_MEASUREMENT_AT=",
					"lib_deps" : ""
				},
				{
					"name" : "Publish measurements to an MQTT broker",
					"type" : "checkbox",
					"build_flags" : "-D USERMOD_DHT_MQTT",
					"lib_deps" : ""
				},
				{
					"name" : "For debug, report delay stats",
					"type" : "checkbox",
					"build_flags" : "-D USERMOD_DHT_STATS",
					"lib_deps" : ""
				}
			]
		},
		{
			"name" : "BH1750 ambient light sensor",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/BH1750_v2/readme.md",
			"build_flags" : "-D USERMOD_BH1750",
			"lib_deps" : "claws/BH1750 @ ^1.2.0",
			"options" : [
				{
					"name" : "The max number of milliseconds between measurements, defaults to 10000 ms",
					"type" : "number",
					"minnumber": 1000,
					"build_flags" : "-D USERMOD_BH1750_MAX_MEASUREMENT_INTERVAL=",
					"lib_deps" : ""
				},
				{
					"name" : "The min number of milliseconds between measurements, defaults to 500 ms",
					"type" : "number",
					"minnumber": 10,
					"build_flags" : "-D USERMOD_BH1750_MIN_MEASUREMENT_INTERVAL=",
					"lib_deps" : ""
				},
				{
					"name" : "The offset value to report on, defaults to 1",
					"type" : "number",
					"minnumber": 1,
					"build_flags" : "-D USERMOD_BH1750_OFFSET_VALUE=",
					"lib_deps" : ""
				},
				{
					"name" : "The number of milliseconds after boot to take first measurement, defaults to 10000 ms",
					"type" : "number",
					"minnumber": 1000,
					"build_flags" : "-D USERMOD_BH1750_FIRST_MEASUREMENT_AT=",
					"lib_deps" : ""
				}
			]
		},
		{
			"name" : "Autosave (automatically save settings to preset and load at startup)",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/usermod_v2_auto_save/readme.md",
			"build_flags" : "-D USERMOD_AUTO_SAVE",
			"lib_deps" : "",
			"options" : [
				{
					"name" : "Delay time after the settings auto-saving routine should be executed",
					"type" : "number",
					"minnumber": 1,
					"build_flags" : "-D AUTOSAVE_AFTER_SEC=",
					"lib_deps" : ""
				},
				{
					"name" : "Preset number used by autosave usermod",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D AUTOSAVE_PRESET_NUM=",
					"lib_deps" : ""
				},
				{
					"name" : "Preset number used by autosave usermod",
					"type" : "checkbox",
					"build_flags" : "-D USERMOD_AUTO_SAVE_ON_BOOT",
					"lib_deps" : ""
				}
			]
		},
		{
			"name" : "Four line display",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/usermod_v2_four_line_display/readme.md",
			"build_flags" : "-D USERMOD_FOUR_LINE_DISPLAY",
			"lib_deps" : "olikraus/U8g2 @ ^2.28.8"
		},
		{
			"name" : "Ping pong clock",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/usermod_v2_ping_pong_clock/readme.md",
			"build_flags" : "-D USERMOD_PING_PONG_CLOCK",
			"lib_deps" : ""
		},
		{
			"name" : "Word clock",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/usermod_v2_word_clock/readme.md",
			"build_flags" : "-D USERMOD_WORDCLOCK",
			"lib_deps" : ""
		},
		{
			"name" : "Analog clock",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/tree/main/usermods/Analog_Clock",
			"build_flags" : "-D USERMOD_ANALOG_CLOCK",
			"lib_deps" : ""
		},
		{
			"name" : "Rotary encoder UI",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/usermod_v2_rotary_encoder_ui/readme.md",
			"build_flags" : "-D USERMOD_ROTARY_ENCODER_UI",
			"lib_deps" : "olikraus/U8g2 @ ^2.28.8\n  Wire",
			"options" : [
				{
					"name" : "Define DT pin (default: 18)",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D ENCODER_DT_PIN=",
					"lib_deps" : ""
				},
				{
					"name" : "Define CLK pin (default: 5)",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D ENCODER_CLK_PIN=",
					"lib_deps" : ""
				},
				{
					"name" : "Define SW pin (default: 19)",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D ENCODER_SW_PIN=",
					"lib_deps" : ""
				},
				{
					"name" : "GPIO functionality: enter INPUT_PULLUP to use internal pull-up, enter INPUT to use pull-up on the PCB)",
					"type" : "defparam",
					"build_flags" : "-D USERMOD_ROTARY_ENCODER_GPIO=",
					"lib_deps" : ""
				}
			]
		},
		{
			"name" : "Rotary encoder UI ALT (alternative, USE_ALT_DISPlAY)",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/usermod_v2_rotary_encoder_ui_ALT/readme.md",
			"build_flags" : "-D USERMOD_ROTARY_ENCODER_UI -D USE_ALT_DISPlAY",
			"lib_deps" : "olikraus/U8g2 @ ^2.28.8\n  Wire",
			"options" : [
				{
					"name" : "Define DT pin (default: 18)",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D ENCODER_DT_PIN=",
					"lib_deps" : ""
				},
				{
					"name" : "Define CLK pin (default: 5)",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D ENCODER_CLK_PIN=",
					"lib_deps" : ""
				},
				{
					"name" : "Define SW pin (default: 19)",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D ENCODER_SW_PIN=",
					"lib_deps" : ""
				},
				{
					"name" : "GPIO functionality: enter INPUT_PULLUP to use internal pull-up, enter INPUT to use pull-up on the PCB)",
					"type" : "defparam",
					"build_flags" : "-D USERMOD_ROTARY_ENCODER_GPIO=",
					"lib_deps" : ""
				}
			]
		},
		{
			"name" : "Animated staircase",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/Animated_Staircase/README.md",
			"build_flags" : "-D USERMOD_ANIMATED_STAIRCASE",
			"lib_deps" : ""
		},
		{
			"name" : "Multirelay",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/multi_relay/readme.md",
			"build_flags" : "-D USERMOD_MULTI_RELAY",
			"lib_deps" : ""
		},
		{
			"name" : "Battery",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/Battery/readme.md",
			"build_flags" : "-D USERMOD_BATTERY",
			"lib_deps" : "",
			"options" : [
				{
					"name" : "Select if you use LiPo rechargeables (1S)",
					"type" : "checkbox",
					"minnumber": 0,
					"build_flags" : "-D USERMOD_BATTERY_USE_LIPO",
					"lib_deps" : ""
				},
				{
					"name" : "Define pin for measurement",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D USERMOD_BATTERY_MEASUREMENT_PIN=",
					"lib_deps" : ""
				},
				{
					"name" : "Battery check interval in ms, defaults to 30000 ms",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D USERMOD_BATTERY_MEASUREMENT_INTERVAL=",
					"lib_deps" : ""
				},
				{
					"name" : "Minimum battery voltage in Volts, default is 2.6 (18650 battery standard)",
					"type" : "number_float",
					"minnumber": 0,
					"build_flags" : "-D USERMOD_BATTERY_MIN_VOLTAGE=",
					"lib_deps" : ""
				},
				{
					"name" : "Maximum battery voltage in Volts, default is 4.2 (18650 battery standard)",
					"type" : "number_float",
					"minnumber": 0,
					"build_flags" : "-D USERMOD_BATTERY_MAX_VOLTAGE=",
					"lib_deps" : ""
				},
				{
					"name" : "The capacity of all cells in parallel summed up in mAh",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D USERMOD_BATTERY_TOTAL_CAPACITY=",
					"lib_deps" : ""
				},
				{
					"name" : "Offset / calibration number, fine tune the measured voltage by the microcontroller",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D USERMOD_BATTERY_CALIBRATION=",
					"lib_deps" : ""
				},
				{
					"name" : "Enables auto-off. Please enter <b>true</b> to enable, <b>false</b> to disable",
					"type" : "defparam",
					"build_flags" : "-D USERMOD_BATTERY_AUTO_OFF_ENABLED=",
					"lib_deps" : ""
				},
				{
					"name" : "When this threshold (in %, 0 to 100) is reached master power turns off",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D USERMOD_BATTERY_AUTO_OFF_THRESHOLD=",
					"lib_deps" : ""
				},
				{
					"name" : "Enables low power indication. Please enter <b>true</b> to enable, <b>false</b> to disable",
					"type" : "defparam",
					"minnumber": 0,
					"build_flags" : "-D USERMOD_BATTERY_LOW_POWER_INDICATOR_ENABLED=",
					"lib_deps" : ""
				},
				{
					"name" : "When low power is detected then use this preset ID to indicate low power",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D USERMOD_BATTERY_LOW_POWER_INDICATOR_PRESET=",
					"lib_deps" : ""
				},
				{
					"name" : "When this threshold (in %, 0 to 100) is reached low power gets indicated",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D USERMOD_BATTERY_LOW_POWER_INDICATOR_THRESHOLD=",
					"lib_deps" : ""
				},
				{
					"name" : "For this duration (in seconds) the configured preset is played",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D USERMOD_BATTERY_LOW_POWER_INDICATOR_DURATION=",
					"lib_deps" : ""
				}
			]
			
		},
		{
			"name" : "Sensors to MQTT (BMP280, CCS811 and Si7021 measurements to Home Assistant via MQTT)",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/sensors_to_mqtt/readme.md",
			"build_flags" : "-D USERMOD_SENSORSTOMQTT",
			"lib_deps" : "adafruit/Adafruit BMP280 Library @ 2.6.8\n  adafruit/Adafruit CCS811 Library @ 1.1.3\n  adafruit/Adafruit Si7021 Library @ 1.5.3\n  adafruit/Adafruit Unified Sensor\n  adafruit/Adafruit BusIO @ 1.9.6"
		},
		{
			"name" : "PIR sensor switch",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/PIR_sensor_switch/readme.md",
			"build_flags" : "-D USERMOD_PIRSWITCH",
			"lib_deps" : "",
			"options" : [
				{
					"name" : "Define number of PIR sensors",
					"type" : "number",
					"minnumber": 1,
					"build_flags" : "-D PIR_SENSOR_MAX_SENSORS=",
					"lib_deps" : ""
				}
			]
		},
		{
			"name" : "BME280 or BMP280 Sensor",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/BME280_v2/README.md",
			"build_flags" : "-D USERMOD_BME280",
			"lib_deps" : "BME280@~3.0.0\n  Wire"
		},
		{
			"name" : "RTC usermod",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/RTC/readme.md",
			"build_flags" : "-D USERMOD_RTC",
			"lib_deps" : ""
		},
		{
			"name" : "RGB rotary encoder",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/rgb-rotary-encoder/readme.md",
			"build_flags" : "-D RGB_ROTARY_ENCODER",
			"lib_deps" : "lennarthennigs/ESP Rotary@^1.5.0"
		},
		{
			"name" : "PWM Fan (please include also usermod DS18B20 Temperatursensor)",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/PWM_fan/readme.md",
			"build_flags" : "-D USERMOD_PWM_FAN",
			"lib_deps" : "",
			"options" : [
				{
					"name" : "Define PWM output pin",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D PWM_PIN=",
					"lib_deps" : ""
				},
				{
					"name" : "Define tachometer input pin",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D TACHO_PIN=",
					"lib_deps" : ""
				}
			]
		},
		{
			"name" : "PWM Outputs (ESP32 only)",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/pwm_outputs/readme.md",
			"build_flags" : "-D USERMOD_PWM_OUTPUTS",
			"lib_deps" : "",
			"options" : [
				{
					"name" : "Define number of PWM outputs (default: 3)",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D USERMOD_PWM_OUTPUT_PINS=",
					"lib_deps" : ""
				}
			]
		},
		{
			"name" : "ADS1115 16-Bit ADC with four inputs",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/ADS1115_v2/readme.md",
			"build_flags" : "-D USERMOD_ADS1115",
			"lib_deps" : "adafruit/Adafruit BusIO @ 1.13.2\n  adafruit/Adafruit ADS1X15 @ 2.4.0\n  adafruit/Adafruit Unified Sensor"
		},
		{
			"name" : "Seven segment display",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/seven_segment_display/readme.md",
			"build_flags" : "-D USERMOD_SEVEN_SEGMENT",
			"lib_deps" : ""
		},
		{
			"name" : "Seven segment display reloaded",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/seven_segment_display_reloaded/readme.md",
			"build_flags" : "-D USERMOD_SSDR",
			"lib_deps" : ""
		},
		{
			"name" : "SN photoresistor (like the KY-018)",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/SN_Photoresistor/readme.md",
			"build_flags" : "-D USERMOD_SN_PHOTORESISTOR",
			"lib_deps" : "",
			"options" : [
				{
					"name" : "Number of milliseconds between measurements. Defaults to 60000 ms",
					"type" : "number",
					"minnumber": 100,
					"build_flags" : "-D USERMOD_SN_PHOTORESISTOR_MEASUREMENT_INTERVAL=",
					"lib_deps" : ""
				},
				{
					"name" : "Number of milliseconds after boot to take first measurement. Defaults to 20000 ms",
					"type" : "number",
					"minnumber": 100,
					"build_flags" : "-D USERMOD_SN_PHOTORESISTOR_FIRST_MEASUREMENT_AT=",
					"lib_deps" : ""
				},
				{
					"name" : "Voltage supplied to the sensor in Volts. Defaults to 5 V",
					"type" : "number_float",
					"minnumber": 100,
					"build_flags" : "-D USERMOD_SN_PHOTORESISTOR_REFERENCE_VOLTAGE=",
					"lib_deps" : ""
				},
				{
					"name" : "ADC precision. Defaults to 10 bits",
					"type" : "number",
					"minnumber": 8,
					"build_flags" : "-D USERMOD_SN_PHOTORESISTOR_ADC_PRECISION=",
					"lib_deps" : ""
				},
				{
					"name" : "Resistor size in Ohm, defaults to 10000.0 (10K Ohms)",
					"type" : "number_float",
					"minnumber": 1,
					"build_flags" : "-D USERMOD_SN_PHOTORESISTOR_RESISTOR_VALUE=",
					"lib_deps" : ""
				},
				{
					"name" : "Offset value to report on. Defaults to 25",
					"type" : "number",
					"minnumber": 0,
					"build_flags" : "-D USERMOD_SN_PHOTORESISTOR_ADC_PRECISION=",
					"lib_deps" : ""
				}
			]
		},
		{
			"name" : "WireGuard VPN",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/wireguard/readme.md",
			"build_flags" : "-D USERMOD_WIREGUARD",
			"lib_deps" : "https://github.com/kienvu58/WireGuard-ESP32-Arduino.git"
		},
		{
			"name" : "Internal Temperature",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/Internal_Temperature_v2/readme.md",
			"build_flags" : "-D USERMOD_INTERNAL_TEMPERATURE",
			"lib_deps" : ""
		},
		{
			"name" : "Support various SHT i2c sensors like the SHT30, SHT31, SHT35 and SHT85",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/sht/readme.md",
			"build_flags" : "-D USERMOD_SHT",
			"lib_deps" : "robtillaart/SHT85@~0.3.3"
		},
		{
			"name" : "Mode sort: provides data about modes and palettes to other usermods",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/usermod_v2_mode_sort/readme.md",
			"build_flags" : "-D USERMOD_MODE_SORT",
			"lib_deps" : ""
		},
		{
			"name" : "Controlling Wiz lights that are part of the same network as the WLED controller",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/main/usermods/wizlights/readme.md",
			"build_flags" : "-D USERMOD_WIZLIGHTS",
			"lib_deps" : ""
		},
		{
			"name" : "[WLED>=0.15.x] BME680/BME68X sensors",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/0_15/usermods/BME68X_v2/README.md",
			"build_flags" : "-D USERMOD_BME68X",
			"lib_deps" : "boschsensortec/BSEC Software Library @ ^1.8.1492"
		},
		{
			"name" : "[WLED>=0.15.x] Support of simple hand gestures via a VL53L0X sensor: on/off and brightness adjustment",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/0_15/usermods/VL53L0X_gestures/readme.md",
			"build_flags" : "-D USERMOD_VL53L0X_GESTURES",
			"lib_deps" : "pololu/VL53L0X @ ^1.3.0"
		},
		{
			"name" : "[WLED>=0.15.x] Support AHT10, AHT15 or AHT20 sensors (Temperature, Humidity)",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/0_15/usermods/AHT10_v2/README.md",
			"build_flags" : "-D USERMOD_AHT10",
			"lib_deps" : "enjoyneering/AHT10@~1.1.0\n  Wire"
		},
		{
			"name" : "[WLED>=0.15.x] Read from a LD2410 movement/presence sensor (requires second UART, ESP32)",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/0_15/usermods/LD2410_v2/readme.md",
			"build_flags" : "-D USERMOD_LD2410",
			"lib_deps" : "ncmreynolds/ld2410@^0.1.3"
		},
		{
			"name" : "[WLED>=0.15.x] Stairway wipe basic",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/0_15/usermods/stairway_wipe_basic/readme.md",
			"build_flags" : "-D USERMOD_STAIRCASE_WIPE",
			"lib_deps" : "",
			"options" : [
				{
					"name" : "Have the LEDs wipe off instead of fading out",
					"type" : "checkbox",
					"build_flags" : "-D STAIRCASE_WIPE_OFF",
					"lib_deps" : ""
				}
			]
		},
		{
			"name" : "[WLED>=0.15.x] Read from a Light Dependent Resistor (LDR) and turn on/off specific presets",
			"sources" : [0, 1, 2, 3],
			"type" : "checkbox",
			"readme" : "https://github.com/Aircoookie/WLED/blob/0_15/usermods/LDR_Dusk_Dawn_v2/README.md",
			"build_flags" : "-D USERMOD_LDR_DUSK_DAWN",
			"lib_deps" : ""
		}
		
	]
}
